{"ast":null,"code":"import _slicedToArray from\"/Users/miguel/Documents/Github/Media-Tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";/**\n * Media Information\n * @summary Displays information about TV shows and movies.\n */import React from'react';import{useState,useEffect}from'react';import Layout from'../components/Layout';import{Container,Row,Col}from'react-bootstrap';import Button from'react-bootstrap/Button';import*as qs from'qs';import'bootstrap/dist/css/bootstrap.min.css';import{FaStar}from'react-icons/fa';var Media=function Media(props){var _useState=useState({data:{id:0,type:\"\",title:\"\",overview:\"\",rating:0,voteCount:0,posterPath:\"/\",seasons:0,releaseDate:\"0000\",firstAirDate:\"0000\",lastAirDate:\"0000\",runtime:0,genre:\"\"}}),_useState2=_slicedToArray(_useState,2),media=_useState2[0],setMedia=_useState2[1];var query=qs.parse(props.location.search,{ignoreQueryPrefix:true});var id=\"\";var type=\"\";if(query.id)id=query.id;if(query.type)type=query.type;var posterBaseURL=\"http://image.tmdb.org/t/p/w185_and_h278_bestv2\";useEffect(function(){fetch(\"/api/getTitleDetails?id=\"+id+\"&type=\"+type).then(function(res){if(res.status===200){return res.json();}else if(res.status===401){fetch(\"/api/addTitle?id=\"+id+\"&type=\"+type).then(function(res){if(res.status===200){window.location.reload();}else{var error=new Error(res.error);throw error;}}).catch(function(err){console.error(err);alert('Error navigating to title\\'s page. Please try again.');});}}).then(function(data){setMedia({data:data});}).catch(function(err){console.error(err);});},[]);return React.createElement(Layout,{fluid:true,style:body},React.createElement(Container,{fluid:true},type===\"movie\"?React.createElement(Row,null,React.createElement(Col,{md:4,lg:4,xl:3,style:colStyle,className:\"text-xs-center text-sm-center text-md-left\"},React.createElement(\"div\",{style:mediaCard},React.createElement(\"img\",{style:mediaPoster,src:media.data.posterPath?posterBaseURL+media.data.posterPath:\"\",alt:\"poster\"}),React.createElement(\"br\",null),React.createElement(Button,{variant:\"primary\",type:\"submit\"},\"Add to List\"))),React.createElement(Col,{md:8,lg:8,xl:9,style:colStyle},React.createElement(\"div\",null,React.createElement(\"h3\",{style:mediaTitle},React.createElement(\"strong\",null,media.data.title?media.data.title:\"\")),React.createElement(\"h6\",{style:mediaDetails},React.createElement(\"span\",null,\"Movie\"),\"\\xA0\\xA0\\xA0|\\xA0\\xA0\\xA0\",React.createElement(\"span\",null,media.data.releaseDate?media.data.releaseDate.substring(0,4):\"\"),\"\\xA0\\xA0\\xA0|\\xA0\\xA0\\xA0\",React.createElement(\"span\",null,media.data.genre?media.data.genre:\"\")),React.createElement(\"div\",{style:mediaRating},media.data.rating?React.createElement(FaStar,{size:\"xs\",style:icon}):\"No ratings\",\"\\xA0\",React.createElement(\"span\",null,media.data.rating?media.data.rating:\"\"),\"\\xA0\\xA0\",React.createElement(\"span\",{style:votes},media.data.voteCount?(media.data.voteCount+\"\").replace(/\\B(?=(\\d{3})+(?!\\d))/g,\",\"):\"\",\" votes\")),React.createElement(\"hr\",null),React.createElement(\"p\",{style:mediaSummary},media.data.overview?media.data.overview:\"\")))):React.createElement(Row,null,React.createElement(Col,{md:4,lg:4,xl:3,style:colStyle,className:\"text-xs-center text-sm-center text-md-left\"},React.createElement(\"div\",{style:mediaCard},React.createElement(\"img\",{style:mediaPoster,src:media.data.posterPath?posterBaseURL+media.data.posterPath:\"\",alt:\"poster\"}),React.createElement(\"br\",null),React.createElement(Button,{variant:\"primary\",type:\"submit\"},\"Add to List\"))),React.createElement(Col,{md:8,lg:8,xl:9,style:colStyle},React.createElement(\"div\",null,React.createElement(\"h3\",{style:mediaTitle},React.createElement(\"strong\",null,media.data.title?media.data.title:\"\")),React.createElement(\"h6\",{style:mediaDetails},React.createElement(\"span\",null,\"TV Series\"),\"\\xA0\\xA0\\xA0|\\xA0\\xA0\\xA0\",React.createElement(\"span\",null,media.data.firstAirDate?media.data.firstAirDate.substring(0,4):\"\",\" - \",media.data.lastAirDate?media.data.lastAirDate.substring(0,4):\"\"),\"\\xA0\\xA0\\xA0|\\xA0\\xA0\\xA0\",React.createElement(\"span\",null,media.data.genre?media.data.genre:\"\")),React.createElement(\"div\",{style:mediaRating},React.createElement(FaStar,{size:\"xs\",style:icon}),\"\\xA0\",React.createElement(\"span\",null,media.data.rating?media.data.rating:\"\"),\"\\xA0\\xA0\",React.createElement(\"span\",{style:votes},media.data.voteCount?(media.data.voteCount+\"\").replace(/\\B(?=(\\d{3})+(?!\\d))/g,\",\"):\"\",\" votes\")),React.createElement(\"hr\",null),React.createElement(\"p\",{style:mediaSummary},media.data.overview?media.data.overview:\"\"))))));};var body={paddingTop:30,paddingBottom:100,paddingRight:'2.5%',paddingLeft:'2.5%',textAlign:'center'};var colStyle={paddingLeft:'2.5%',paddingRight:'2.5%'};var mediaCard={display:'block',width:'500px'};var mediaPoster={width:'185px',height:'278px'};var mediaTitle={color:'black',textAlign:'left'};var mediaDetails={color:'black',opacity:'.7',textAlign:'left'};var mediaRating={textAlign:'left',fontSize:'20pt',marginTop:10};var icon={color:'gold',width:25,marginTop:'-5'};var votes={color:'black',opacity:'0.7',fontSize:'10pt'};var mediaSummary={textAlign:'left'};export default Media;","map":{"version":3,"sources":["/Users/miguel/Documents/Github/Media-Tracker/src/pages/Media.js"],"names":["React","useState","useEffect","Layout","Container","Row","Col","Button","qs","FaStar","Media","props","data","id","type","title","overview","rating","voteCount","posterPath","seasons","releaseDate","firstAirDate","lastAirDate","runtime","genre","media","setMedia","query","parse","location","search","ignoreQueryPrefix","posterBaseURL","fetch","then","res","status","json","window","reload","error","Error","catch","err","console","alert","body","colStyle","mediaCard","mediaPoster","mediaTitle","mediaDetails","substring","mediaRating","icon","votes","replace","mediaSummary","paddingTop","paddingBottom","paddingRight","paddingLeft","textAlign","display","width","height","color","opacity","fontSize","marginTop"],"mappings":"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","sourcesContent":["/**\n * Media Information\n * @summary Displays information about TV shows and movies.\n */\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport Layout from '../components/Layout';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport Button from 'react-bootstrap/Button'\nimport * as qs from 'qs';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { FaStar } from 'react-icons/fa';\n\nconst Media = props => {\n    const [media, setMedia] = useState({\n        data: {\n            id: 0,\n            type: \"\",\n            title: \"\",\n            overview: \"\",\n            rating: 0,\n            voteCount: 0,\n            posterPath: \"/\",\n            seasons: 0,\n            releaseDate: \"0000\",\n            firstAirDate: \"0000\",\n            lastAirDate: \"0000\",\n            runtime: 0,\n            genre: \"\",\n        }\n    });\n\n    const query = qs.parse(props.location.search, {\n        ignoreQueryPrefix: true\n    });\n    let id = \"\";\n    let type = \"\";\n    if (query.id)\n        id = query.id;\n    if (query.type)\n        type = query.type;\n    const posterBaseURL = \"http://image.tmdb.org/t/p/w185_and_h278_bestv2\";\n\n\n    useEffect(() => {\n        fetch(\"/api/getTitleDetails?id=\" + id + \"&type=\" + type)\n            .then(res => {\n                if (res.status === 200) {\n                    return res.json();\n                } else if (res.status === 401) {\n                    fetch(\"/api/addTitle?id=\" + id + \"&type=\" + type)\n                        .then(res => {\n                            if (res.status === 200) {\n                                window.location.reload();\n                            } else {\n                                const error = new Error(res.error);\n                                throw error;\n                            }\n                        })\n                        .catch(err => {\n                            console.error(err);\n                            alert('Error navigating to title\\'s page. Please try again.');\n                        });\n                }\n            }).then(data => {\n                setMedia({ data: data });\n            })\n            .catch(err => {\n                console.error(err);\n            });\n    }, []);\n\n    return (\n        <Layout fluid={true} style={body}>\n            <Container fluid>\n                {type === \"movie\" ?\n                    <Row>\n                        <Col md={4} lg={4} xl={3} style={colStyle} className=\"text-xs-center text-sm-center text-md-left\">\n                            <div style={mediaCard}>\n                                <img style={mediaPoster} src={media.data.posterPath ? (posterBaseURL + media.data.posterPath) : \"\"} alt=\"poster\"></img>\n                                <br />\n                                <Button variant=\"primary\" type=\"submit\">Add to List</Button>\n                            </div>\n                        </Col>\n                        <Col md={8} lg={8} xl={9} style={colStyle}>\n                            <div>\n                                <h3 style={mediaTitle}><strong>{media.data.title ? media.data.title : \"\"}</strong></h3>\n                                <h6 style={mediaDetails}>\n                                    <span>Movie</span>&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;<span>{media.data.releaseDate ? media.data.releaseDate.substring(0, 4) : \"\"}</span>&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;<span>{media.data.genre ? media.data.genre : \"\"}</span>\n                                </h6>\n\n                                <div style={mediaRating}>\n                                    {media.data.rating ? <FaStar size=\"xs\" style={icon} /> : \"No ratings\"}&nbsp;<span>{media.data.rating ? media.data.rating : \"\"}</span>&nbsp;&nbsp;\n                            <span style={votes}>{media.data.voteCount ? (media.data.voteCount + \"\").replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : \"\"} votes</span>\n                                </div>\n\n                                <hr />\n\n                                <p style={mediaSummary}>{media.data.overview ? media.data.overview : \"\"}</p>\n\n                                {/* Leaving off for now but would like to implement in the future\n                            <div>\n                                <h4><strong>Details</strong></h4>\n                                <p>\n                                    <strong>Creator:&nbsp;&nbsp;</strong>Blah <br />\n                                    <strong>Cast:&nbsp;&nbsp;</strong>Blah\n                            </p>\n                            </div>\n                            */}\n                            </div>\n                        </Col>\n                    </Row>\n                    :\n                    <Row>\n                        <Col md={4} lg={4} xl={3} style={colStyle} className=\"text-xs-center text-sm-center text-md-left\">\n                            <div style={mediaCard}>\n                                <img style={mediaPoster} src={media.data.posterPath ? (posterBaseURL + media.data.posterPath) : \"\"} alt=\"poster\"></img>\n                                <br />\n                                <Button variant=\"primary\" type=\"submit\">Add to List</Button>\n                            </div>\n                        </Col>\n                        <Col md={8} lg={8} xl={9} style={colStyle}>\n                            <div>\n                                <h3 style={mediaTitle}><strong>{media.data.title ? media.data.title : \"\"}</strong></h3>\n                                <h6 style={mediaDetails}>\n                                    <span>TV Series</span>&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;<span>{media.data.firstAirDate ? media.data.firstAirDate.substring(0, 4) : \"\"} - {media.data.lastAirDate ? media.data.lastAirDate.substring(0, 4) : \"\"}</span>&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;<span>{media.data.genre ? media.data.genre : \"\"}</span>\n                                </h6>\n\n                                <div style={mediaRating}>\n                                    <FaStar size=\"xs\" style={icon} />&nbsp;<span>{media.data.rating ? media.data.rating : \"\"}</span>&nbsp;&nbsp;\n                            <span style={votes}>{media.data.voteCount ? (media.data.voteCount + \"\").replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : \"\"} votes</span>\n                                </div>\n\n                                <hr />\n\n                                <p style={mediaSummary}>{media.data.overview ? media.data.overview : \"\"}</p>\n\n                                {/* Leaving off for now but would like to implement in the future\n                            <div>\n                                <h4><strong>Details</strong></h4>\n                                <p>\n                                    <strong>Creator:&nbsp;&nbsp;</strong>Blah <br />\n                                    <strong>Cast:&nbsp;&nbsp;</strong>Blah\n                            </p>\n                            </div>\n                            */}\n                            </div>\n                        </Col>\n                    </Row>\n                }\n            </Container>\n        </Layout>\n    );\n};\n\nconst body = {\n    paddingTop: 30,\n    paddingBottom: 100,\n    paddingRight: '2.5%',\n    paddingLeft: '2.5%',\n    textAlign: 'center'\n};\n\nconst colStyle = {\n    paddingLeft: '2.5%',\n    paddingRight: '2.5%'\n};\n\nconst mediaCard = {\n    display: 'block',\n    width: '500px',\n};\n\nconst mediaPoster = {\n    width: '185px',\n    height: '278px',\n};\n\nconst mediaTitle = {\n    color: 'black',\n    textAlign: 'left'\n}\n\nconst mediaDetails = {\n    color: 'black',\n    opacity: '.7',\n    textAlign: 'left'\n};\n\nconst mediaRating = {\n    textAlign: 'left',\n    fontSize: '20pt',\n    marginTop: 10\n};\n\nconst icon = {\n    color: 'gold',\n    width: 25,\n    marginTop: '-5'\n};\n\nconst votes = {\n    color: 'black',\n    opacity: '0.7',\n    fontSize: '10pt',\n};\n\nconst mediaSummary = {\n    textAlign: 'left'\n};\n\nexport default Media;"]},"metadata":{},"sourceType":"module"}