{"ast":null,"code":"var _jsxFileName = \"/Users/miguel/Documents/Github/Media-Tracker/client/src/components/withAuth.js\";\n// withAuth.jsx\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nexport default function withAuth(ComponentToProtect) {\n  return class extends Component {\n    constructor() {\n      super();\n      this.state = {\n        loading: true,\n        redirect: false\n      };\n    }\n\n    componentDidMount() {\n      fetch('/api/checkToken', {\n        credentials: 'include'\n      }).then(res => {\n        if (res.status === 200) {\n          this.setState({\n            loading: false\n          });\n        } else {\n          const error = new Error(res.error);\n          throw error;\n        }\n      }).catch(err => {\n        console.error(err);\n        this.setState({\n          loading: false,\n          redirect: true\n        });\n      });\n    }\n\n    render() {\n      const _this$state = this.state,\n            loading = _this$state.loading,\n            redirect = _this$state.redirect;\n\n      if (loading) {\n        return null;\n      }\n\n      if (redirect) {\n        return React.createElement(Redirect, {\n          to: \"/login\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(ComponentToProtect, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      })));\n    }\n\n  };\n}","map":{"version":3,"sources":["/Users/miguel/Documents/Github/Media-Tracker/client/src/components/withAuth.js"],"names":["React","Component","Redirect","withAuth","ComponentToProtect","constructor","state","loading","redirect","componentDidMount","fetch","credentials","then","res","status","setState","error","Error","catch","err","console","render","props"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,eAAe,SAASC,QAAT,CAAkBC,kBAAlB,EAAsC;AACjD,SAAO,cAAcH,SAAd,CAAwB;AAC3BI,IAAAA,WAAW,GAAG;AACV;AACA,WAAKC,KAAL,GAAa;AACTC,QAAAA,OAAO,EAAE,IADA;AAETC,QAAAA,QAAQ,EAAE;AAFD,OAAb;AAIH;;AACDC,IAAAA,iBAAiB,GAAG;AAChBC,MAAAA,KAAK,CAAC,iBAAD,EAAoB;AAAEC,QAAAA,WAAW,EAAE;AAAf,OAApB,CAAL,CACKC,IADL,CACUC,GAAG,IAAI;AACT,YAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACpB,eAAKC,QAAL,CAAc;AAAER,YAAAA,OAAO,EAAE;AAAX,WAAd;AACH,SAFD,MAEO;AACH,gBAAMS,KAAK,GAAG,IAAIC,KAAJ,CAAUJ,GAAG,CAACG,KAAd,CAAd;AACA,gBAAMA,KAAN;AACH;AACJ,OARL,EASKE,KATL,CASWC,GAAG,IAAI;AACVC,QAAAA,OAAO,CAACJ,KAAR,CAAcG,GAAd;AACA,aAAKJ,QAAL,CAAc;AAAER,UAAAA,OAAO,EAAE,KAAX;AAAkBC,UAAAA,QAAQ,EAAE;AAA5B,SAAd;AACH,OAZL;AAaH;;AACDa,IAAAA,MAAM,GAAG;AAAA,0BACyB,KAAKf,KAD9B;AAAA,YACGC,OADH,eACGA,OADH;AAAA,YACYC,QADZ,eACYA,QADZ;;AAEL,UAAID,OAAJ,EAAa;AACT,eAAO,IAAP;AACH;;AACD,UAAIC,QAAJ,EAAc;AACV,eAAO,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;AACD,aACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,kBAAD,oBAAwB,KAAKc,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ,CADJ;AAKH;;AApC0B,GAA/B;AAsCH","sourcesContent":["// withAuth.jsx\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nexport default function withAuth(ComponentToProtect) {\n    return class extends Component {\n        constructor() {\n            super();\n            this.state = {\n                loading: true,\n                redirect: false,\n            };\n        }\n        componentDidMount() {\n            fetch('/api/checkToken', { credentials: 'include' })\n                .then(res => {\n                    if (res.status === 200) {\n                        this.setState({ loading: false });\n                    } else {\n                        const error = new Error(res.error);\n                        throw error;\n                    }\n                })\n                .catch(err => {\n                    console.error(err);\n                    this.setState({ loading: false, redirect: true });\n                });\n        }\n        render() {\n            const { loading, redirect } = this.state;\n            if (loading) {\n                return null;\n            }\n            if (redirect) {\n                return <Redirect to=\"/login\" />;\n            }\n            return (\n                <React.Fragment>\n                    <ComponentToProtect {...this.props} />\n                </React.Fragment>\n            );\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}