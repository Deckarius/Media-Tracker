{"ast":null,"code":"import React from'react';import{Card,Button}from'react-bootstrap';import{withRouter}from'react-router-dom';var ResultCard=function ResultCard(props){var id=-1;var type=\"\";var title=\"\";var overview=\"\";var releaseDate=\"\";var posterPath=\"\";if(props.id)id=props.id;if(props.type)type=props.type;if(props.title)title=props.title;if(props.overview)overview=props.overview;if(props.release_date)releaseDate=props.release_date;if(props.poster)posterPath=props.poster;var posterBaseURL=\"http://image.tmdb.org/t/p/w185_and_h278_bestv2/\";var handleMediaPage=function handleMediaPage(event){event.preventDefault();fetch(\"/api/addTitle?id=\"+id+\"&type=\"+type).then(function(res){if(res.status===200){props.history.push(\"/media?id=\"+id+\"&type=\"+type);}else if(res.status===202){props.history.push(\"/media?id=\"+id+\"&type=\"+type);}else if(res.status===500){alert(\"Error: Insufficient information for title. Available only as a search result.\");}else{var error=new Error(res.error);throw error;}}).catch(function(err){console.error(err);alert('Error navigating to title\\'s page. Please try again.');});};return React.createElement(Card,{style:cardStyle,className:\"card text-center\"},React.createElement(Card.Header,{style:cardHeaderStyle},React.createElement(\"a\",{style:{cursor:'pointer'},onClick:handleMediaPage},React.createElement(Card.Img,{variant:\"top\",style:cardImageStyle,src:posterBaseURL+posterPath}))),React.createElement(Card.Body,null,React.createElement(Card.Title,{style:cardTitleStyle},title,\" (\",releaseDate.length>4?releaseDate.substring(0,4):\"\",\")\"),React.createElement(Card.Text,{style:cardTextStyle},React.createElement(\"i\",null,overview.length<100?overview:overview.substring(0,96)+\"...\")),React.createElement(Card.Footer,null,React.createElement(Button,null,\"Add to list\"))));};var cardStyle={backgroundColor:'#212121'};var cardHeaderStyle={backgroundColor:'whitesmoke'};var cardImageStyle={width:'185px',height:'278px'};var cardTitleStyle={color:'whitesmoke',height:'65px'};var cardTextStyle={color:'lightgrey',height:'40px'};export default withRouter(ResultCard);","map":{"version":3,"sources":["/Users/miguel/Documents/Github/Media-Tracker/src/components/ResultCard.js"],"names":["React","Card","Button","withRouter","ResultCard","props","id","type","title","overview","releaseDate","posterPath","release_date","poster","posterBaseURL","handleMediaPage","event","preventDefault","fetch","then","res","status","history","push","alert","error","Error","catch","err","console","cardStyle","cardHeaderStyle","cursor","cardImageStyle","cardTitleStyle","length","substring","cardTextStyle","backgroundColor","width","height","color"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Card, Button } from 'react-bootstrap';\nimport { withRouter } from 'react-router-dom';\n\nconst ResultCard = props => {\n    let id = -1;\n    let type = \"\";\n    let title = \"\";\n    let overview = \"\";\n    let releaseDate = \"\";\n    let posterPath = \"\";\n    if (props.id)\n        id = props.id;\n    if (props.type)\n        type = props.type;\n    if (props.title)\n        title = props.title;\n    if (props.overview)\n        overview = props.overview;\n    if (props.release_date)\n        releaseDate = props.release_date;\n    if (props.poster)\n        posterPath = props.poster;\n    const posterBaseURL = \"http://image.tmdb.org/t/p/w185_and_h278_bestv2/\";\n\n    const handleMediaPage = (event) => {\n        event.preventDefault();\n        fetch(\"/api/addTitle?id=\" + id + \"&type=\" + type)\n            .then(res => {\n                if (res.status === 200) {\n                    props.history.push(\"/media?id=\" + id + \"&type=\" + type);\n                } else if (res.status === 202) {\n                    props.history.push(\"/media?id=\" + id + \"&type=\" + type);\n                } else if (res.status === 500) {\n                    alert(\"Error: Insufficient information for title. Available only as a search result.\")\n                } else {\n                    const error = new Error(res.error);\n                    throw error;\n                }\n            })\n            .catch(err => {\n                console.error(err);\n                alert('Error navigating to title\\'s page. Please try again.');\n            });\n    };\n\n    return (\n        <Card style={cardStyle} className=\"card text-center\">\n            <Card.Header style={cardHeaderStyle}>\n                <a style={{ cursor: 'pointer' }} onClick={handleMediaPage}>\n                    <Card.Img variant=\"top\" style={cardImageStyle} src={posterBaseURL + posterPath} />\n                </a>\n            </Card.Header>\n            <Card.Body>\n                <Card.Title style={cardTitleStyle}>{title} ({releaseDate.length > 4 ? releaseDate.substring(0, 4) : \"\"})</Card.Title>\n                <Card.Text style={cardTextStyle}>\n                    <i>{overview.length < 100 ? overview : overview.substring(0, 96) + \"...\"}</i>\n                </Card.Text>\n                <Card.Footer>\n                    <Button>Add to list</Button>\n                </Card.Footer>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst cardStyle = {\n    backgroundColor: '#212121'\n};\n\nconst cardHeaderStyle = {\n    backgroundColor: 'whitesmoke'\n};\n\nconst cardImageStyle = {\n    width: '185px',\n    height: '278px',\n};\n\nconst cardTitleStyle = {\n    color: 'whitesmoke',\n    height: '65px'\n};\n\nconst cardTextStyle = {\n    color: 'lightgrey',\n    height: '40px'\n};\n\nexport default withRouter(ResultCard);"]},"metadata":{},"sourceType":"module"}