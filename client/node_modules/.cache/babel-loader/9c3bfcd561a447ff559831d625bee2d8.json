{"ast":null,"code":"import _regeneratorRuntime from\"/Users/miguel/Documents/Github/Media-Tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/miguel/Documents/Github/Media-Tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";/**\n * API.js\n * @summary This file contains the actual calls to the server in order to further\n * separate the frontend from the backend\n */import axios from'axios';/**\n * @param title \n * @returns object with movie and tv show results for query\n */export var searchByTitle=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(title){var res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return axios.get('/search-title?title='+title);case 3:res=_context.sent;return _context.abrupt(\"return\",{response:res.data.results});case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);return _context.abrupt(\"return\",{response:null});case 10:case\"end\":return _context.stop();}}},_callee,null,[[0,7]]);}));return function searchByTitle(_x){return _ref.apply(this,arguments);};}();","map":{"version":3,"sources":["/Users/miguel/Documents/Github/Media-Tracker/src/utils/API.js"],"names":["axios","searchByTitle","title","get","res","response","data","results"],"mappings":"mUAAA;;;;GAMA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA;;;GAIA,MAAO,IAAMC,CAAAA,aAAa,0FAAG,iBAAOC,KAAP,gKAEHF,CAAAA,KAAK,CAACG,GAAN,CAAU,uBAAyBD,KAAnC,CAFG,QAEfE,GAFe,+CAGd,CAAEC,QAAQ,CAAED,GAAG,CAACE,IAAJ,CAASC,OAArB,CAHc,0FAKd,CAAEF,QAAQ,CAAE,IAAZ,CALc,sEAAH,kBAAbJ,CAAAA,aAAa,4CAAnB","sourcesContent":["/**\n * API.js\n * @summary This file contains the actual calls to the server in order to further\n * separate the frontend from the backend\n */\n\nimport axios from 'axios';\n\n/**\n * @param title \n * @returns object with movie and tv show results for query\n */\nexport const searchByTitle = async (title) => {\n    try {\n        const res = await axios.get('/search-title?title=' + title);\n        return { response: res.data.results }\n    } catch (error) {\n        return { response: null }\n    }\n};"]},"metadata":{},"sourceType":"module"}