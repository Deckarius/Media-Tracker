{"ast":null,"code":"import _slicedToArray from \"/Users/fabian/Documents/GitHub/PentaTech/Media-Tracker/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/fabian/Documents/GitHub/PentaTech/Media-Tracker/client/src/components/ResultCard.js\";\nimport React from 'react';\nimport { Card, Button } from 'react-bootstrap';\nimport { withRouter } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nconst ResultCard = props => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        loggedIn = _useState2[0],\n        setLoggedIn = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        username = _useState4[0],\n        setUsername = _useState4[1];\n\n  let id = -1;\n  let type = \"\";\n  let title = \"\";\n  let overview = \"\";\n  let releaseDate = \"\";\n  let posterPath = \"\"; // if logged in redirect to profile\n\n  fetch(\"/api/getUserDetails\", {\n    credentials: 'include'\n  }).then(res => {\n    if (res.status === 200) {\n      setLoggedIn(true);\n      return res.json();\n    }\n  }).then(data => {\n    setUsername(data.username);\n  }).catch(err => {// user not logged in, or error\n  });\n\n  const handleLogout = event => {\n    event.preventDefault();\n    fetch(\"/api/logout\", {\n      credentials: 'include'\n    }).then(res => {\n      if (res.status === 200) {\n        props.history.push('/login');\n      } else {\n        const error = new Error(res.error);\n        throw error;\n      }\n    }).catch(err => {\n      console.error(err);\n      alert('Error logging out. Please try again.');\n    });\n  };\n\n  if (props.id) id = props.id;\n  if (props.type) type = props.type;\n  if (props.title) title = props.title;\n  if (props.overview) overview = props.overview;\n  if (props.release_date) releaseDate = props.release_date;\n  if (props.poster) posterPath = props.poster;\n  const posterBaseURL = \"http://image.tmdb.org/t/p/w185_and_h278_bestv2/\";\n\n  const handleMediaPage = event => {\n    event.preventDefault();\n    fetch(\"/api/addTitle?id=\" + id + \"&type=\" + type).then(res => {\n      if (res.status === 200) {\n        props.history.push(\"/media?id=\" + id + \"&type=\" + type);\n      } else if (res.status === 202) {\n        props.history.push(\"/media?id=\" + id + \"&type=\" + type);\n      } else if (res.status === 500) {\n        alert(\"Error: Insufficient information for title. Available only as a search result.\");\n      } else {\n        const error = new Error(res.error);\n        throw error;\n      }\n    }).catch(err => {\n      console.error(err);\n      alert('Error navigating to title\\'s page. Please try again.');\n    });\n  };\n\n  return React.createElement(Card, {\n    style: cardStyle,\n    className: \"card text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(Card.Header, {\n    style: {\n      background: 'linear-gradient(rgba(0,0,0,.7), rgba(0,0,0,.7)), url(' + posterBaseURL + posterPath + ')',\n      backgroundRepeat: 'no-repeat',\n      backgroundSize: 'cover'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    style: {\n      cursor: 'pointer'\n    },\n    onClick: handleMediaPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(Card.Img, {\n    variant: \"top\",\n    style: cardImageStyle,\n    src: posterBaseURL + posterPath,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }))), loggedIn ? React.createElement(Card.Body, {\n    style: {\n      height: 240\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    style: {\n      cursor: 'pointer'\n    },\n    onClick: handleMediaPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(Card.Title, {\n    style: cardTitleStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, title, \" (\", releaseDate.length > 4 ? releaseDate.substring(0, 4) : \"\", \")\")), React.createElement(Card.Text, {\n    style: cardTextStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, overview.length < 100 ? overview : overview.substring(0, 96) + \"...\")), React.createElement(Card.Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"(\", React.createElement(Button, {\n    style: {\n      borderRadius: 5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Add to list\"), \")\")) : React.createElement(Card.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    style: {\n      cursor: 'pointer'\n    },\n    onClick: handleMediaPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(Card.Title, {\n    style: cardTitleStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, title, \" (\", releaseDate.length > 4 ? releaseDate.substring(0, 4) : \"\", \")\")), React.createElement(Card.Text, {\n    style: cardTextStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, overview.length < 100 ? overview : overview.substring(0, 96) + \"...\"))));\n};\n\nconst cardStyle = {\n  backgroundColor: '#212121'\n}; // const cardHeaderStyle = {\n//     backgroundColor: 'white'\n// };\n\nconst cardImageStyle = {\n  width: '185px',\n  height: '278px'\n};\nconst cardTitleStyle = {\n  color: 'whitesmoke',\n  fontSize: '20sp',\n  height: 40\n};\nconst cardTextStyle = {\n  color: 'lightgrey',\n  height: '40px',\n  marginBottom: 30\n};\nexport default withRouter(ResultCard);","map":{"version":3,"sources":["/Users/fabian/Documents/GitHub/PentaTech/Media-Tracker/client/src/components/ResultCard.js"],"names":["React","Card","Button","withRouter","useState","useEffect","ResultCard","props","loggedIn","setLoggedIn","username","setUsername","id","type","title","overview","releaseDate","posterPath","fetch","credentials","then","res","status","json","data","catch","err","handleLogout","event","preventDefault","history","push","error","Error","console","alert","release_date","poster","posterBaseURL","handleMediaPage","cardStyle","background","backgroundRepeat","backgroundSize","cursor","cardImageStyle","height","cardTitleStyle","length","substring","cardTextStyle","borderRadius","backgroundColor","width","color","fontSize","marginBottom"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Card, Button } from 'react-bootstrap';\nimport { withRouter } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nconst ResultCard = props => {\n    const [loggedIn, setLoggedIn] = useState(false);\n    const [username, setUsername] = useState(\"\");\n    let id = -1;\n    let type = \"\";\n    let title = \"\";\n    let overview = \"\";\n    let releaseDate = \"\";\n    let posterPath = \"\";\n\n    // if logged in redirect to profile\n    fetch(\"/api/getUserDetails\", { credentials: 'include' })\n        .then(res => {\n            if (res.status === 200) {\n                setLoggedIn(true);\n                return res.json();\n            }\n        }).then(data => {\n            setUsername(data.username);\n        })\n        .catch(err => {\n            // user not logged in, or error\n        });\n\n    const handleLogout = event => {\n        event.preventDefault();\n        fetch(\"/api/logout\"\n            , { credentials: 'include' })\n            .then(res => {\n                if (res.status === 200) {\n                    props.history.push('/login');\n                } else {\n                    const error = new Error(res.error);\n                    throw error;\n                }\n            })\n            .catch(err => {\n                console.error(err);\n                alert('Error logging out. Please try again.');\n            });\n    }\n\n    if (props.id)\n        id = props.id;\n    if (props.type)\n        type = props.type;\n    if (props.title)\n        title = props.title;\n    if (props.overview)\n        overview = props.overview;\n    if (props.release_date)\n        releaseDate = props.release_date;\n    if (props.poster)\n        posterPath = props.poster;\n    const posterBaseURL = \"http://image.tmdb.org/t/p/w185_and_h278_bestv2/\";\n\n    const handleMediaPage = (event) => {\n        event.preventDefault();\n        fetch(\"/api/addTitle?id=\" + id + \"&type=\" + type)\n            .then(res => {\n                if (res.status === 200) {\n                    props.history.push(\"/media?id=\" + id + \"&type=\" + type);\n                } else if (res.status === 202) {\n                    props.history.push(\"/media?id=\" + id + \"&type=\" + type);\n                } else if (res.status === 500) {\n                    alert(\"Error: Insufficient information for title. Available only as a search result.\")\n                } else {\n                    const error = new Error(res.error);\n                    throw error;\n                }\n            })\n            .catch(err => {\n                console.error(err);\n                alert('Error navigating to title\\'s page. Please try again.');\n            });\n    };\n\n    return (\n        <Card style={cardStyle} className=\"card text-center\">\n            <Card.Header style={{background: 'linear-gradient(rgba(0,0,0,.7), rgba(0,0,0,.7)), url(' + posterBaseURL + posterPath + ')', backgroundRepeat: 'no-repeat', backgroundSize: 'cover'}}>\n                <a style={{ cursor: 'pointer' }} onClick={handleMediaPage}>\n                    <Card.Img variant=\"top\" style={cardImageStyle} src={posterBaseURL + posterPath} />\n                </a>\n            </Card.Header>\n            {loggedIn ?\n                (<Card.Body style={{height: 240}}>\n                    <a style={{ cursor: 'pointer' }} onClick={handleMediaPage}>\n                        <Card.Title style={cardTitleStyle}>\n                            {title} ({releaseDate.length > 4 ? releaseDate.substring(0, 4) : \"\"})\n                        </Card.Title>\n                    </a>\n                    <Card.Text style={cardTextStyle}>\n                        <i>{overview.length < 100 ? overview : overview.substring(0, 96) + \"...\"}</i>\n                    </Card.Text>\n                    <Card.Footer>\n                        (<Button style={{borderRadius: 5}}>Add to list</Button>)\n                    </Card.Footer>\n                </Card.Body>)\n                :\n                <Card.Body>\n                    <a style={{ cursor: 'pointer' }} onClick={handleMediaPage}>\n                        <Card.Title style={cardTitleStyle}>\n                            {title} ({releaseDate.length > 4 ? releaseDate.substring(0, 4) : \"\"})\n                        </Card.Title>\n                    </a>\n                    <Card.Text style={cardTextStyle}>\n                        <i>{overview.length < 100 ? overview : overview.substring(0, 96) + \"...\"}</i>\n                    </Card.Text>\n                </Card.Body>\n            }\n        </Card>\n    );\n};\n\nconst cardStyle = {\n    backgroundColor: '#212121'\n};\n\n// const cardHeaderStyle = {\n//     backgroundColor: 'white'\n// };\n\nconst cardImageStyle = {\n    width: '185px',\n    height: '278px',\n};\n\nconst cardTitleStyle = {\n    color: 'whitesmoke',\n    fontSize: '20sp',\n    height: 40\n};\n\nconst cardTextStyle = {\n    color: 'lightgrey',\n    height: '40px',\n    marginBottom: 30\n};\n\nexport default withRouter(ResultCard);"]},"metadata":{},"sourceType":"module"}