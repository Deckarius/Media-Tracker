{"ast":null,"code":"import _slicedToArray from \"/Users/miguel/Documents/Github/Media-Tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/miguel/Documents/Github/Media-Tracker/src/pages/Search.js\";\n\n/**\n * Search\n * @summary This page will display search results.\n * Data for the search request is passed as a query string from the previous page.\n * Will request search results from our server here.\n */\nimport React from 'react';\nimport Layout from '../components/Layout';\nimport SearchBar from '../components/SearchBar';\nimport ResultCard from '../components/ResultCard';\nimport { Container, Row, Col, Tabs, Tab, CardColumns } from 'react-bootstrap';\nimport { searchByTitle } from '../utils/API';\nimport { useState, useEffect } from 'react';\nimport * as qs from 'qs';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../styles/Search.css';\nconst rowStyle = {\n  width: '100%'\n};\nconst colStyle = {\n  padding: 0,\n  margin: 0\n};\nconst tabsStyle = {\n  paddingTop: 5,\n  paddingLeft: 5,\n  paddingRight: 5,\n  paddingBottom: 0,\n  borderRadius: 5,\n  borderLeft: '1px solid #4688F1',\n  borderRight: '1px solid #4688F1',\n  borderTop: '1px solid #4688F1'\n};\nconst tabStyle = {// for possible future styling\n};\n\nconst Search = props => {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        results = _useState2[0],\n        setResults = _useState2[1];\n\n  const query = qs.parse(props.location.search, {\n    ignoreQueryPrefix: true\n  });\n  let title = null;\n  if (query.title) title = query.title.replace(\"&\", \"\"); // const results = {\n  //     movies: [\n  //         {\n  //             title: \"Avengers: Infinity War\",\n  //             release_date: \"2019-10-04\",\n  //             overview: \"One of the Marvel Avengers movies.\",\n  //             poster_path: \"/7WsyChQLEftFiDOVTGkv3hFpyyt.jpg\"\n  //         },\n  //         {\n  //             title: \"The Avengers: End Game\",\n  //             release_date: \"2019-05-10\",\n  //             overview: \"The first of Marvel's Avengers movies.\",\n  //             poster_path: \"/cezWGskPY5x7GaglTTRN4Fugfb8.jpg\"\n  //         },\n  //         {\n  //             title: \"Avengers: Infinity War\",\n  //             release_date: \"2019-10-04\",\n  //             overview: \"One of the Marvelfopk14fpok4qpofkqp,lwe,clp,plfm4rfomkg4lwfm4,[qowq,cpq4,pokfopqf[pc,2pd,2p3ro4kopfk[prqo,4po[p13po[ktok3opk[4po3kfp[3,dq]]]]]]] Avengers movies.\",\n  //             poster_path: \"/7WsyChQLEftFiDOVTGkv3hFpyyt.jpg\"\n  //         },\n  //         {\n  //             title: \"The Avengers: End Game\",\n  //             release_date: \"2019-05-10\",\n  //             overview: \"The first of Marvel's Avengerfpo234kfpo3k4qoprw[fd,3,r,2o3f[pd4f43fs movies.\",\n  //             poster_path: \"/cezWGskPY5x7GaglTTRN4Fugfb8.jpg\"\n  //         },\n  //         {\n  //             title: \"Avengers: Infinity War\",\n  //             release_date: \"2019-10-04\",\n  //             overview: \"One of the Marvel Avengers movies.\",\n  //             poster_path: \"/7WsyChQLEftFiDOVTGkv3hFpyyt.jpg\"\n  //         },\n  //         {\n  //             title: \"The Avengers: End Game\",\n  //             release_date: \"2019-05-10\",\n  //             overview: \"The first of M[g5lropcaldp[cwfqkopkvewp[dmoifjo14[3jfkod43ij[po1kd,1omkregqkovckq,[fom4po3[kfp4,co,2[pqdok23kropgk1plq,wlpc,pdarvel's Avengers movies.\",\n  //             poster_path: \"/cezWGskPY5x7GaglTTRN4Fugfb8.jpg\"\n  //         }\n  //     ],\n  //     shows: [\n  //         {\n  //             name: \"The Office\",\n  //             first_air_date: \"2009-05-12\",\n  //             overview: \"A paper company is met with surprises every day by their crazyfopkqrpgqkpo43kpf,cpmpo34mgqpokfpoq,o3rkopkgpokq4owfmpmc,q boss Michael Scott.\",\n  //             poster_path: \"/7WsyChQLEftFiDOVTGkv3hFpyyt.jpg\"\n  //         },\n  //         {\n  //             name: \"Parks and Recreation\",\n  //             first_air_date: \"2011-07-19\",\n  //             overview: \"A day-to-day look at the Parks and Recreation department of local government.\",\n  //             poster_path: \"/cezWGskPY5x7GaglTTRN4Fugfb8.jpg\"\n  //         },\n  //         {\n  //             name: \"The Office\",\n  //             first_air_date: \"2009-05-12\",\n  //             overview: \"A paper company is met with surprises every day by their crazy boss Michael Scott.\",\n  //             poster_path: \"/7WsyChQLEftFiDOVTGkv3hFpyyt.jpg\"\n  //         },\n  //         {\n  //             name: \"Parks and Recreation\",\n  //             first_air_date: \"2011-07-19\",\n  //             overview: \"A day-to-day look at the Parks and Recreation department of local government.mrqgeokrmgkmwerlgmkwremglwkermgklemclqwecpworfkorvwmbpc;kmlq;wemfeiofmiqeg\",\n  //             poster_path: \"/cezWGskPY5x7GaglTTRN4Fugfb8.jpg\"\n  //         },\n  //         {\n  //             name: \"The Office\",\n  //             first_air_date: \"2009-05-12\",\n  //             overview: \"A paper company is met with surprises every day by their crazy boss Michael Scott.\",\n  //             poster_path: \"/7WsyChQLEftFiDOVTGkv3hFpyyt.jpg\"\n  //         },\n  //         {\n  //             name: \"Parks and Recreation\",\n  //             first_air_date: \"2011-07-19\",\n  //             overview: \"A day-to-day look at the Parks and Recreation department of local government.\",\n  //             poster_path: \"/cezWGskPY5x7GaglTTRN4Fugfb8.jpg\"\n  //         }\n  //     ]\n  // };\n\n  useEffect(() => {\n    const fetchResults = async () => {\n      if (title && typeof title !== 'undefined' && title.replace(/^\\s+/, '').replace(/\\s+$/, '') !== '') {\n        const res = await searchByTitle(title);\n        setResults(res.response);\n      } else {\n        setResults(null);\n      }\n    };\n\n    fetchResults();\n  }, [title]);\n  return React.createElement(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(Row, {\n    style: rowStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(Col, {\n    style: colStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    style: {\n      borderBottom: '1px solid red'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, \"Search\"))), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(Col, {\n    style: colStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(SearchBar, {\n    buttonStyle: \"dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  })), \" \"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }), React.createElement(Row, {\n    style: rowStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, // If no search was made, just '--domain--/search', omit search results section\n  results !== null ? React.createElement(Col, {\n    style: colStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, \"Results for:\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, title), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, React.createElement(Tabs, {\n    style: tabsStyle,\n    defaultActiveKey: \"movies\",\n    id: \"results-tab\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(Tab, {\n    stlye: tabStyle,\n    eventKey: \"movies\",\n    title: \"Movies\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, results.movies.length > 0 ? React.createElement(CardColumns, {\n    className: \"card-columns text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, results.movies.map((item, index) => {\n    return React.createElement(ResultCard, {\n      key: index,\n      title: item.title,\n      overview: item.overview,\n      release_date: item.release_date,\n      poster: item.poster_path,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    });\n  })) : React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, \"No results\")), React.createElement(Tab, {\n    style: tabStyle,\n    eventKey: \"shows\",\n    title: \"Shows\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, results.shows.length > 0 ? React.createElement(CardColumns, {\n    className: \"card-columns text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, results.shows.map((item, index) => {\n    return React.createElement(ResultCard, {\n      key: index,\n      title: item.name,\n      overview: item.overview,\n      release_date: item.first_air_date,\n      poster: item.poster_path,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    });\n  })) : React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, \"No results\"))))) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, \"Search movies or TV shows!\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, \"Add titles to your lists to keep track of what you've watched!\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, \"Powered by \", React.createElement(\"a\", {\n    href: \"https://www.themoviedb.org\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, \"TMDb\"), \".\")))));\n};\n\nexport default Search;","map":{"version":3,"sources":["/Users/miguel/Documents/Github/Media-Tracker/src/pages/Search.js"],"names":["React","Layout","SearchBar","ResultCard","Container","Row","Col","Tabs","Tab","CardColumns","searchByTitle","useState","useEffect","qs","rowStyle","width","colStyle","padding","margin","tabsStyle","paddingTop","paddingLeft","paddingRight","paddingBottom","borderRadius","borderLeft","borderRight","borderTop","tabStyle","Search","props","results","setResults","query","parse","location","search","ignoreQueryPrefix","title","replace","fetchResults","res","response","borderBottom","movies","length","map","item","index","overview","release_date","poster_path","shows","name","first_air_date"],"mappings":"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","sourcesContent":["/**\n * Search\n * @summary This page will display search results.\n * Data for the search request is passed as a query string from the previous page.\n * Will request search results from our server here.\n */\n\nimport React from 'react';\nimport Layout from '../components/Layout';\nimport SearchBar from '../components/SearchBar';\nimport ResultCard from '../components/ResultCard';\nimport { Container, Row, Col, Tabs, Tab, CardColumns } from 'react-bootstrap';\nimport { searchByTitle } from '../utils/API';\nimport { useState, useEffect } from 'react';\nimport * as qs from 'qs';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../styles/Search.css'\n\n\nconst rowStyle = {\n    width: '100%',\n};\n\nconst colStyle = {\n    padding: 0,\n    margin: 0\n};\n\nconst tabsStyle = {\n    paddingTop: 5,\n    paddingLeft: 5,\n    paddingRight: 5,\n    paddingBottom: 0,\n    borderRadius: 5,\n    borderLeft: '1px solid #4688F1',\n    borderRight: '1px solid #4688F1',\n    borderTop: '1px solid #4688F1'\n};\n\nconst tabStyle = {\n    // for possible future styling\n};\n\nconst Search = props => {\n    const [results, setResults] = useState(null);\n    const query = qs.parse(props.location.search, {\n        ignoreQueryPrefix: true\n    });\n    let title = null;\n    if (query.title)\n        title = query.title.replace(\"&\", \"\");\n\n\n    // const results = {\n    //     movies: [\n    //         {\n    //             title: \"Avengers: Infinity War\",\n    //             release_date: \"2019-10-04\",\n    //             overview: \"One of the Marvel Avengers movies.\",\n    //             poster_path: \"/7WsyChQLEftFiDOVTGkv3hFpyyt.jpg\"\n    //         },\n    //         {\n    //             title: \"The Avengers: End Game\",\n    //             release_date: \"2019-05-10\",\n    //             overview: \"The first of Marvel's Avengers movies.\",\n    //             poster_path: \"/cezWGskPY5x7GaglTTRN4Fugfb8.jpg\"\n    //         },\n    //         {\n    //             title: \"Avengers: Infinity War\",\n    //             release_date: \"2019-10-04\",\n    //             overview: \"One of the Marvelfopk14fpok4qpofkqp,lwe,clp,plfm4rfomkg4lwfm4,[qowq,cpq4,pokfopqf[pc,2pd,2p3ro4kopfk[prqo,4po[p13po[ktok3opk[4po3kfp[3,dq]]]]]]] Avengers movies.\",\n    //             poster_path: \"/7WsyChQLEftFiDOVTGkv3hFpyyt.jpg\"\n    //         },\n    //         {\n    //             title: \"The Avengers: End Game\",\n    //             release_date: \"2019-05-10\",\n    //             overview: \"The first of Marvel's Avengerfpo234kfpo3k4qoprw[fd,3,r,2o3f[pd4f43fs movies.\",\n    //             poster_path: \"/cezWGskPY5x7GaglTTRN4Fugfb8.jpg\"\n    //         },\n    //         {\n    //             title: \"Avengers: Infinity War\",\n    //             release_date: \"2019-10-04\",\n    //             overview: \"One of the Marvel Avengers movies.\",\n    //             poster_path: \"/7WsyChQLEftFiDOVTGkv3hFpyyt.jpg\"\n    //         },\n    //         {\n    //             title: \"The Avengers: End Game\",\n    //             release_date: \"2019-05-10\",\n    //             overview: \"The first of M[g5lropcaldp[cwfqkopkvewp[dmoifjo14[3jfkod43ij[po1kd,1omkregqkovckq,[fom4po3[kfp4,co,2[pqdok23kropgk1plq,wlpc,pdarvel's Avengers movies.\",\n    //             poster_path: \"/cezWGskPY5x7GaglTTRN4Fugfb8.jpg\"\n    //         }\n    //     ],\n    //     shows: [\n    //         {\n    //             name: \"The Office\",\n    //             first_air_date: \"2009-05-12\",\n    //             overview: \"A paper company is met with surprises every day by their crazyfopkqrpgqkpo43kpf,cpmpo34mgqpokfpoq,o3rkopkgpokq4owfmpmc,q boss Michael Scott.\",\n    //             poster_path: \"/7WsyChQLEftFiDOVTGkv3hFpyyt.jpg\"\n    //         },\n    //         {\n    //             name: \"Parks and Recreation\",\n    //             first_air_date: \"2011-07-19\",\n    //             overview: \"A day-to-day look at the Parks and Recreation department of local government.\",\n    //             poster_path: \"/cezWGskPY5x7GaglTTRN4Fugfb8.jpg\"\n    //         },\n    //         {\n    //             name: \"The Office\",\n    //             first_air_date: \"2009-05-12\",\n    //             overview: \"A paper company is met with surprises every day by their crazy boss Michael Scott.\",\n    //             poster_path: \"/7WsyChQLEftFiDOVTGkv3hFpyyt.jpg\"\n    //         },\n    //         {\n    //             name: \"Parks and Recreation\",\n    //             first_air_date: \"2011-07-19\",\n    //             overview: \"A day-to-day look at the Parks and Recreation department of local government.mrqgeokrmgkmwerlgmkwremglwkermgklemclqwecpworfkorvwmbpc;kmlq;wemfeiofmiqeg\",\n    //             poster_path: \"/cezWGskPY5x7GaglTTRN4Fugfb8.jpg\"\n    //         },\n    //         {\n    //             name: \"The Office\",\n    //             first_air_date: \"2009-05-12\",\n    //             overview: \"A paper company is met with surprises every day by their crazy boss Michael Scott.\",\n    //             poster_path: \"/7WsyChQLEftFiDOVTGkv3hFpyyt.jpg\"\n    //         },\n    //         {\n    //             name: \"Parks and Recreation\",\n    //             first_air_date: \"2011-07-19\",\n    //             overview: \"A day-to-day look at the Parks and Recreation department of local government.\",\n    //             poster_path: \"/cezWGskPY5x7GaglTTRN4Fugfb8.jpg\"\n    //         }\n    //     ]\n    // };\n\n    useEffect(() => {\n        const fetchResults = async () => {\n            if (title && typeof title !== 'undefined' && title.replace(/^\\s+/, '').replace(/\\s+$/, '') !== '') {\n                const res = await searchByTitle(title);\n                setResults(res.response);\n            } else {\n                setResults(null);\n            }\n        };\n        fetchResults();\n    }, [title]);\n\n    return (\n        <Layout>\n            <Container>\n                <Row style={rowStyle}>\n                    <Col style={colStyle}><h1 style={{ borderBottom: '1px solid red' }}>Search</h1></Col>\n                </Row>\n                <br />\n                <Row>\n                    <Col style={colStyle}><SearchBar buttonStyle='dark' /></Col> {/* ...props to implement child components inheriting size? */}\n                </Row>\n                <br />\n                <Row style={rowStyle}>\n                    {\n                        // If no search was made, just '--domain--/search', omit search results section\n                        results !== null ?\n                            <Col style={colStyle}>\n                                <h5>Results for:</h5>\n\n                                <p>{title}</p>\n                                <div>\n                                    <Tabs style={tabsStyle} defaultActiveKey=\"movies\" id=\"results-tab\">\n                                        <Tab stlye={tabStyle} eventKey=\"movies\" title=\"Movies\">\n                                            {results.movies.length > 0 ?\n                                                <CardColumns className=\"card-columns text-center\">\n                                                    {results.movies.map((item, index) => {\n                                                        return (\n                                                            <ResultCard key={index} title={item.title} overview={item.overview} release_date={item.release_date} poster={item.poster_path} />\n                                                        );\n                                                    })\n                                                    }\n                                                </CardColumns>\n                                                :\n                                                <p>No results</p>\n                                            }\n                                        </Tab>\n                                        <Tab style={tabStyle} eventKey=\"shows\" title=\"Shows\">\n                                            {results.shows.length > 0 ?\n                                                <CardColumns className=\"card-columns text-center\">\n                                                    {results.shows.map((item, index) => {\n                                                        return (\n                                                            <ResultCard key={index} title={item.name} overview={item.overview} release_date={item.first_air_date} poster={item.poster_path} />\n                                                        );\n                                                    })\n                                                    }\n                                                </CardColumns>\n                                                :\n                                                <p>No results</p>\n                                            }\n                                        </Tab>\n                                    </Tabs>\n                                </div>\n                            </Col>\n                            :\n                            <div>\n                                <h5>Search movies or TV shows!</h5>\n                                <p>Add titles to your lists to keep track of what you've watched!</p>\n                                <p>Powered by <a href=\"https://www.themoviedb.org\" target=\"_blank\" rel=\"noopener noreferrer\">TMDb</a>.</p>\n                            </div>\n                    }\n                </Row>\n            </Container>\n        </Layout>\n    );\n};\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}